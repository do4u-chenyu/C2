<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA10/420f020f020f020f020f020f020f020f02
        0f020f020f010P4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA20f420f020f020f020f020f020f020f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA20fw20f020f020f020f020f020f020f02
        0f020f020f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAA20f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f02
        0f020f020f010PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA10Pw20f020f020f020f020f02
        0f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020P4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA/3/820f020f020f020f020f020f020f020f020f020f020f020f020f020f02
        0f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA20f020f020f02
        0f020f020f020f020f020f020f020f0pZoQkPlYzvOU20f020f020f020f020f020f020f020f020f02
        0f020f0AAAAAAAAAAAAAAAAAAAAAAAAq1P820f020f020f020f020f020f020f020f020f020f020f0k
        PlYkPlYmUGs20f020f020f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAAAAAA2
        0f020f020f020f020f020f020f020f020f020f020f020f0kPlYkPlYmUGs20f020f020f020f020f02
        0f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAA20f020f020f020f020f020f020f020f02
        0f020f020f020f0kPlYkPlYmTGY20f020f020f020f020f020f020f020f020f020f020f020f0AAAAA
        AAAAAAAAAAAAAAA20f020f020f020f020f020f020f020f020f020f020f0kPlYkPlYkPlYkPlYkP1c2
        0f020f020f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAA20f020f020f020f02
        0f020f020f020f020f020f0ysdgkPlYjPVUkPlYkPlYkPlY20f020f020f020f020f020f020f020f02
        0f020f020f0AAAAAAAAAAAAAAAAAAAA20f020f020f020f020f020f020f020f020f020f0qdJQkPlYk
        PlYkPlYkPlYkPlY0vug20f020f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAA2
        0f020f020f020f020f020f020f020f020f020f02zPgkPlYkPlYkPlYkPlYkPlY20f020f020f020f02
        0f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAA20f020f020f020f020f020f020f020f02
        0f020f020f0oZIAkPlYkPlYkPlYwosc20f020f020f020f020f020f020f020f020f020f020f0AAAAA
        AAAAAAAAAAAAAAA20f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f02
        0f020f020f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAA20f020f020f020f02
        0f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f02
        0f020f020f0AAAAAAAAAAAAAAAAAAAA20f020f020f020f020f020f020f020f020f020f020f020f02
        0f020f020f020f020f020f020f020f020f020f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAAA
        AAA20f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f02
        0f020f020f020f020f020f0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA20f020f020f020f020f020f02
        0f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020f020PwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAABxTjdxTjdxTjdxTjYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdx
        TjdxTjdxTjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjYA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjcAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTTcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABxTTZxTjdxTjdxTjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABx
        TjdxTjdxTjdvTz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjcA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjcAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABzUTlxTjdxTjdxTjdwTjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABs
        TTZxTjdxTjdxTjdxTjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjdxTjdxTjcAAAAA
        AAAAAAAAAAAAAABxTjdxTjdxTjdxTjdxTjdwTTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdx
        TTYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxTjdx
        TjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdxTjdwTjYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxVDhxTjdxTjdxTjdxTjdxTjdxTjdxTjdx
        TjdxTjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwTTZxTjdwTDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/wAH//wAA//4AAD/8AAAf+AAAD/AAAA/wAAAH4AAAB+AAAAPgAAAD4AAAA+AA
        AAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPwAAAH+AAAD/w//h/8P/4f/D/+H/w//h/+H/w//h/4P/4P
        +H//A+B//4AA///AAf//4Af///4//w==
</value>
  </data>
</root>